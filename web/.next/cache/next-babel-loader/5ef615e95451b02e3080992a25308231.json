{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Min Khant\\\\Desktop\\\\Monorepo\\\\shared\\\\Demo.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Text, View, TouchableOpacity, TextInput } from 'react-native';\nimport { httpGet } from './http/httpHandler';\nimport styles from './styles';\nexport class Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        name: '123'\n      }],\n      fatched: false\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromApi();\n  }\n\n  getDataFromApi() {\n    httpGet('connectionService/getConnections').then(result => {\n      if (result) {\n        return this.setState({\n          data: result,\n          fatched: true\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      input,\n      container,\n      headerText,\n      loginButton\n    } = styles;\n\n    if (this.state.fatched) {\n      return __jsx(View, {\n        style: container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Text, {\n        style: headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"DevNet\"), __jsx(View, {\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(TextInput, {\n        style: input,\n        placeholder: \"email\",\n        onChangeText: text => this.setState({\n          email: text\n        }),\n        keyboardType: \"email-address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), __jsx(TextInput, {\n        style: input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: text => this.setState({\n          password: text\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), __jsx(TouchableOpacity, {\n        onPress: () => this.onLogin(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(View, {\n        style: loginButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 20,\n          fontWeight: '800'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Login\")))));\n    } else {\n      return __jsx(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" Demo from Shared folder  \"), __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Received Data: NO DATA(network error)\"));\n    }\n  }\n\n}\nexport default Demo;","map":{"version":3,"sources":["C:/Users/Min Khant/Desktop/Monorepo/shared/Demo.js"],"names":["React","Component","Text","View","TouchableOpacity","TextInput","httpGet","styles","Demo","constructor","props","state","data","name","fatched","componentDidMount","getDataFromApi","then","result","setState","render","input","container","headerText","loginButton","backgroundColor","text","email","password","onLogin","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, TouchableOpacity, TextInput } from 'react-native'\r\nimport { httpGet } from './http/httpHandler'\r\nimport styles from './styles'\r\n\r\nexport class Demo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [{ name: '123' }],\r\n            fatched: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromApi()\r\n    }\r\n\r\n\r\n    getDataFromApi() {\r\n        httpGet('connectionService/getConnections').then(\r\n            (result) => {\r\n                if (result) {\r\n                    return this.setState({\r\n                        data: result,\r\n                        fatched: true\r\n                    });\r\n                }\r\n\r\n            },\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { input, container, headerText, loginButton } = styles\r\n        if (this.state.fatched) {\r\n            return (\r\n                <View style={container}>\r\n                    {/* <Text> Demo from Shared folder</Text>\r\n                    <Text>Received Data: {this.state.data[0].name}</Text> */}\r\n                    <Text style={headerText}>DevNet</Text>\r\n                    <View style={{backgroundColor:'white'}}>\r\n                    <TextInput style={input} placeholder=\"email\" onChangeText={text => this.setState({ email: text })} keyboardType=\"email-address\" />\r\n                    <TextInput style={input} placeholder=\"Password\" secureTextEntry={true} onChangeText={text => this.setState({ password: text })} />\r\n\r\n                    <TouchableOpacity onPress={() => this.onLogin()}>\r\n                        <View\r\n                            style={loginButton}>\r\n                            <Text style={{ color: 'white', fontSize: 20, fontWeight: '800' }}>\r\n                                Login\r\n                        </Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            )\r\n        } else {\r\n            return (\r\n                <View>\r\n                    <Text> Demo from Shared folder  </Text>\r\n                    <Text>Received Data: NO DATA(network error)</Text>\r\n                </View>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Demo\r\n"]},"metadata":{},"sourceType":"module"}