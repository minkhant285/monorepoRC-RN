{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Min Khant\\\\Desktop\\\\Monorepo\\\\shared\\\\Demo.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Text, View } from 'react-native';\nimport { httpGet } from './http/httpHandler';\nexport class Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        name: '123'\n      }],\n      fatched: false\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromApi();\n  }\n\n  getDataFromApi() {\n    httpGet('connectionService/getConnections').then(result => {\n      if (result) {\n        return this.setState({\n          data: result,\n          fatched: true\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.fatched) {\n      return __jsx(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Demo from Shared folder\"), __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Received Data: \", this.state.data[0].name), __jsx(Button, {\n        title: \"Click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    } else {\n      return __jsx(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Demo from Shared folder  \"), __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Received Data: NO DATA(network error)\"));\n    }\n  }\n\n}\nexport default Demo;","map":{"version":3,"sources":["C:/Users/Min Khant/Desktop/Monorepo/shared/Demo.js"],"names":["React","Component","Text","View","httpGet","Demo","constructor","props","state","data","name","fatched","componentDidMount","getDataFromApi","then","result","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAGA,OAAO,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,cAAL;AACH;;AAGDA,EAAAA,cAAc,GAAG;AACbT,IAAAA,OAAO,CAAC,kCAAD,CAAP,CAA4CU,IAA5C,CACKC,MAAD,IAAY;AACR,UAAIA,MAAJ,EAAY;AACR,eAAO,KAAKC,QAAL,CAAc;AACjBP,UAAAA,IAAI,EAAEM,MADW;AAEjBJ,UAAAA,OAAO,EAAE;AAFQ,SAAd,CAAP;AAIH;AAEJ,KATL;AAWH;;AAEDM,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKT,KAAL,CAAWG,OAAf,EAAwB;AACpB,aACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKH,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBC,IAAzC,CAFJ,EAGI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH,KARD,MAQO;AACH,aACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFJ,CADJ;AAMH;AAEJ;;AAhD+B;AAmDpC,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View } from 'react-native'\r\nimport { httpGet } from './http/httpHandler'\r\n\r\n\r\nexport class Demo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [{ name: '123' }],\r\n            fatched: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromApi()\r\n    }\r\n\r\n\r\n    getDataFromApi() {\r\n        httpGet('connectionService/getConnections').then(\r\n            (result) => {\r\n                if (result) {\r\n                    return this.setState({\r\n                        data: result,\r\n                        fatched: true\r\n                    });\r\n                }\r\n\r\n            },\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.fatched) {\r\n            return (\r\n                <View>\r\n                    <Text> Demo from Shared folder</Text>\r\n                    <Text>Received Data: {this.state.data[0].name}</Text>\r\n                    <Button title=\"Click\"/>\r\n                </View>\r\n            )\r\n        } else {\r\n            return (\r\n                <View>\r\n                    <Text> Demo from Shared folder  </Text>\r\n                    <Text>Received Data: NO DATA(network error)</Text>\r\n                </View>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Demo\r\n"]},"metadata":{},"sourceType":"module"}