{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Min Khant\\\\Desktop\\\\Monorepo\\\\shared\\\\Demo.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Text, View, TouchableOpacity, TextInput } from 'react-native';\nimport { httpGet } from './http/httpHandler';\nimport styles from './styles';\nexport var Demo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Demo, _Component);\n\n  function Demo(props) {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this, props));\n    _this.state = {\n      data: [{\n        name: '123'\n      }],\n      fatched: false\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromApi();\n    }\n  }, {\n    key: \"getDataFromApi\",\n    value: function getDataFromApi() {\n      var _this2 = this;\n\n      httpGet('connectionService/getConnections').then(function (result) {\n        if (result) {\n          return _this2.setState({\n            data: result,\n            fatched: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var input = styles.input,\n          container = styles.container,\n          headerText = styles.headerText,\n          loginButton = styles.loginButton;\n\n      if (this.state.fatched) {\n        return __jsx(View, {\n          style: container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, __jsx(Text, {\n          style: headerText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"DevNet\"), __jsx(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, __jsx(TextInput, {\n          style: input,\n          placeholder: \"email\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              email: text\n            });\n          },\n          keyboardType: \"email-address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), __jsx(TextInput, {\n          style: input,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              password: text\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), __jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3.onLogin();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, __jsx(View, {\n          style: loginButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, __jsx(Text, {\n          style: {\n            padding: '20',\n            color: 'white',\n            fontSize: 20,\n            fontWeight: '800'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Login\")))));\n      } else {\n        return __jsx(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, __jsx(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \" Demo from Shared folder  \"), __jsx(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Received Data: NO DATA(network error)\"));\n      }\n    }\n  }]);\n\n  return Demo;\n}(Component);\nexport default Demo;","map":{"version":3,"sources":["C:/Users/Min Khant/Desktop/Monorepo/shared/Demo.js"],"names":["React","Component","Text","View","TouchableOpacity","TextInput","httpGet","styles","Demo","props","state","data","name","fatched","getDataFromApi","then","result","setState","input","container","headerText","loginButton","text","email","password","onLogin","padding","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, TouchableOpacity, TextInput } from 'react-native'\r\nimport { httpGet } from './http/httpHandler'\r\nimport styles from './styles'\r\n\r\nexport class Demo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [{ name: '123' }],\r\n            fatched: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromApi()\r\n    }\r\n\r\n\r\n    getDataFromApi() {\r\n        httpGet('connectionService/getConnections').then(\r\n            (result) => {\r\n                if (result) {\r\n                    return this.setState({\r\n                        data: result,\r\n                        fatched: true\r\n                    });\r\n                }\r\n\r\n            },\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { input, container, headerText, loginButton } = styles\r\n        if (this.state.fatched) {\r\n            return (\r\n                <View style={container}>\r\n                    {/* <Text> Demo from Shared folder</Text>\r\n                    <Text>Received Data: {this.state.data[0].name}</Text> */}\r\n                    <Text style={headerText}>DevNet</Text>\r\n                    <View>\r\n                    <TextInput style={input} placeholder=\"email\" onChangeText={text => this.setState({ email: text })} keyboardType=\"email-address\" />\r\n                    <TextInput style={input} placeholder=\"Password\" secureTextEntry={true} onChangeText={text => this.setState({ password: text })} />\r\n\r\n                    <TouchableOpacity onPress={() => this.onLogin()}>\r\n                        <View\r\n                            style={loginButton}>\r\n                            <Text style={{ padding:'20',color: 'white', fontSize: 20, fontWeight: '800' }}>\r\n                                Login\r\n                        </Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            )\r\n        } else {\r\n            return (\r\n                <View>\r\n                    <Text> Demo from Shared folder  </Text>\r\n                    <Text>Received Data: NO DATA(network error)</Text>\r\n                </View>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Demo\r\n"]},"metadata":{},"sourceType":"module"}